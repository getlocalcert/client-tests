name: Issue Cert Tests (staging)
on:
  push:
  schedule:
    - cron: "15 6 * * *"

jobs:
  acmesh-issue:
    runs-on: ubuntu-latest

    env:
      ACMEDNS_BASE_URL: "https://api.getlocalcert.net/api/v1/acme-dns-compat"
      ACMEDNS_SUBDOMAIN: ${{ vars.ACMEDNS_SUBDOMAIN }}
      ACMEDNS_FULLDOMAIN: ${{ vars.ACMEDNS_FULLDOMAIN }}
      ACMEDNS_USERNAME: ${{ secrets.ACMEDNS_USERNAME }}
      ACMEDNS_PASSWORD: ${{ secrets.ACMEDNS_PASSWORD }}
      ACMEDNS_EMAIL: ${{ secrets.ACMEDNS_EMAIL }}

    steps:
      - name: Install acme.sh
        run: curl https://get.acme.sh | sh -s email=${ACMEDNS_EMAIL} --install --force
      - name: Issue certificate
        run: ~/.acme.sh/acme.sh --issue --debug --dns dns_acmedns -d ${ACMEDNS_FULLDOMAIN} --staging

  acmesh-register-and-issue:
    runs-on: ubuntu-latest

    env:
      ACMEDNS_EMAIL: ${{ secrets.ACMEDNS_EMAIL }}

    steps:
      - name: Install acme.sh
        run: curl https://get.acme.sh | sh -s email=${ACMEDNS_EMAIL} --install --force
      - uses: actions/checkout@v3
      - name: Register and Issue certificate
        run: ${GITHUB_WORKSPACE}/examples/acme.sh/register-and-issue.sh

  lego-register-and-issue:
    runs-on: golang:latest

    env:
      ACMEDNS_EMAIL: ${{ secrets.ACMEDNS_EMAIL }}

    steps:
      - name: Install jq
        run: apt update && apt install -y jq
      - name: Install LEGO
        run: go install github.com/go-acme/lego/v4/cmd/lego@latest
      - uses: actions/checkout@v3
      - name: Register and Issue certificate
        run: ${GITHUB_WORKSPACE}/examples/lego/register-and-issue.sh

